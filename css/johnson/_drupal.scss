// Drupal overrides
//--------------------//

body.admin-menu { padding-top: 0 !important; }

#admin-menu li { font-size: 12px; }

// # of reads
.statistics_counter {
	font-size: 16px;
	padding: 4px 8px !important;
	background: $light-gray;
	margin-top: 1em;
}

// Webform
//--------------------//
.webform-client-form {
	margin: 2em 0;
	label {
		font-size: 18px;
	}
	.description {
		color: $charcoal-gray;
	}
}
.webform-component {
	margin: 0 0 1em;
}
// force bootstrap styling for email field since it doesn't have bootstrap .form-control class on it
input .email {
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  border-radius: $input-border-radius;
  @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  @include placeholder();

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content
  }

  // [converter] extracted textarea& to textarea.form-control
}